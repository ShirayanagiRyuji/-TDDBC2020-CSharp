//// チーム名：もっとC#増えろ！ ////

整数閉区間を示すクラス（あるいは構造体）をつくりたい。
整数閉区間オブジェクトは下端点と上端点を持ち、文字列表現も返せる
（例: 下端点 3, 上端点 8 の整数閉区間の文字列表記は "[3,8]"）。
ただし、上端点より下端点が大きい閉区間を作ることはできない。
整数の閉区間は指定した整数を含むかどうかを判定できる。
また、別の閉区間と等価かどうかや、完全に含まれるかどうかも判定できる。

/* 優先度の高い ・ 実装が容易 */

[x] 整数閉区間を示すクラス -> 戻り値もしくは、オブジェクトを作る処理
	[x] パラメータが2つ（下端点、上端点）
	　  [x] パラメータ(int 1,int 2)で整数閉区間のオブジェクトのインスタンスが取得できる

[x] 文字列表現を"[下端点,上端点]"の形式で返せる -> ToString() が Publicなメンバにある -> 書式についてはDocコメント記載
    [x] 下端点1,上端点2を設定した時、文字列"[1,2]"が取得できる
    [x] 下端点0,上端点999を設定した時、文字列"[0,999]"が取得できる
    [x] 下端点-999,上端点0を設定した時、文字列"[-999,0]"が取得できる

[ ] 整数区間の範囲チェック
	[ ] 上端点より下端点が小さい場合、例外(Exception)が発生しない -> Exception形式については、Docコメント記載
		[x] 下端点0,上端点999で整数閉区間のオブジェクトを作成すると例外が発生しない
		[x] 下端点-999,上端点0で整数閉区間のオブジェクトを作成すると例外が発生しない
		[ ] 下端点1,上端点1で整数閉区間のオブジェクトを作成すると例外が発生しない

	[ ] 上端点より下端点が大きい場合、例外(Exception)が発生する
		[ ] 2,1で整数閉区間のオブジェクトを作成すると例外が発生しない
		[ ] 999,0で整数閉区間のオブジェクトが作成すると例外が発生しない
		[ ] 0,-999で整数閉区間のオブジェクトが作成すると例外が発生しない
		[ ] 1,-2で整数閉区間のオブジェクトを作成すると例外が発生しない


/* 優先度が低い ・ 実装が容易 */


/* 優先度の高い ・ 実装が難しい */

[ ] 指定した整数が閉区間に含まれるか判定できる

[ ] 他の閉区間と等価か判定できる -> Equals() が Publicなメンバにある

[ ] 他の閉区間が完全に含まれるか判定できる


/* 優先度が低い ・ 実装が難しい */

